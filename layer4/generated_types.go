// Code generated by "cue exp gengotypes"; DO NOT EDIT.

package layer4

type EvaluationResults map[string]any	/* CUE top */

type ControlEvaluation struct {
	Name	string	`json:"name" yaml:"name"`

	ControlId	string	`json:"control-id" yaml:"control-id"`

	Result	Result	`json:"result" yaml:"result"`

	Message	string	`json:"message" yaml:"message"`

	CorruptedState	bool	`json:"corrupted-state" yaml:"corrupted-state"`

	Assessments	[]Assessment	`json:"assessments" yaml:"assessments"`
}

type Assessment struct {
	RequirementId	string	`json:"requirement-id" yaml:"requirement-id"`

	Applicability	[]string	`json:"applicability" yaml:"applicability"`

	Description	string	`json:"description" yaml:"description"`

	Result	Result	`json:"result" yaml:"result"`

	Message	string	`json:"message" yaml:"message"`

	Steps	[]AssessmentStep	`json:"steps" yaml:"steps"`

	StepsExecuted	int64	`json:"steps-executed,omitempty" yaml:"steps-executed,omitempty"`

	RunDuration	string	`json:"run-duration,omitempty" yaml:"run-duration,omitempty"`

	Value	any/* CUE top */ `json:"value,omitempty" yaml:"value,omitempty"`

	Changes	map[string]Change	`json:"changes,omitempty" yaml:"changes,omitempty"`

	Recommendation	string	`json:"recommendation,omitempty" yaml:"recommendation,omitempty"`
}

type Change struct {
	TargetName	string	`json:"target-name" yaml:"target-name"`

	Description	string	`json:"description" yaml:"description"`

	TargetObject	any/* CUE top */ `json:"target-object,omitempty" yaml:"target-object,omitempty"`

	Applied	bool	`json:"applied,omitempty" yaml:"applied,omitempty"`

	Reverted	bool	`json:"reverted,omitempty" yaml:"reverted,omitempty"`

	Error	string	`json:"error,omitempty" yaml:"error,omitempty"`
}
